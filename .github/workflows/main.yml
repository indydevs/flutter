name: CI


on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['2.7']
    env:
      CI: true
    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - name: Lint
      run: bundle exec rubocop
    - name: Run tests (minitest+rspec)
      env:
        TESTOPTS: '-v'
      run: bundle exec rake test
    - name: Run integration tests
      run: |
        bundle exec rake integration
        bundle exec rake integration
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/coverage.xml,./rspec_coverage/coverage.xml
    - name: Upload flutter state
      uses: actions/upload-artifact@v3
      with:
        name: flutter-state
        path: ./.flutter
  flutter:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['2.7']
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - name: Retrieve cache keys
      run: |
        echo "::set-output name=PREVIOUS_COMMIT::$(git rev-parse HEAD~1)"
      id: cache_keys
    - name: Setup flutter state
      id: flutter-state
      uses: pat-s/always-upload-cache@v2.1.5
      env:
        cache-name: cache-flutter-state
      with:
        path: .flutter
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.ruby-version }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.ruby-version }}-${{ steps.cache_keys.outputs.PREVIOUS_COMMIT }}
    - name: Run tests (minitest+rspec)
      env:
        TESTOPTS: '-v'
      run: |
        git log --oneline HEAD..${{ steps.cache_keys.outputs.PREVIOUS_COMMIT }}
        bundle exec rake test
  release:
    needs: [test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
          bundler-cache: true
      - name: Release gem
        run: |
          gem release -k ${{ secrets.RUBYGEMS }}
      - name: Generate release notes
        run: |
          bundle exec rake release_notes > release_notes.md
      - name: Create GH Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*.gem"
          bodyFile: release_notes.md
          token: ${{ secrets.GITHUB_TOKEN }}

