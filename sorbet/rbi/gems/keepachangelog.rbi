# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/keepachangelog/all/keepachangelog.rbi
#
# keepachangelog-0.6.1

module Keepachangelog
  def self.version; end
end
class Keepachangelog::Parser
  def initialize; end
  def parsed_content; end
  def parsed_content=(arg0); end
  def to_json; end
  def to_md; end
  def to_s; end
  def to_yaml(path = nil); end
end
class Keepachangelog::MarkdownParser < Keepachangelog::Parser
  def clean_bullet(string); end
  def extract_anchors!(content); end
  def extract_title!(text); end
  def get_repo_url(anchors); end
  def get_version_url(version, anchors); end
  def parse(content); end
  def parse_meta(anchors, header); end
  def parse_section(content); end
  def parse_version(content, anchors); end
  def self.load(filename = nil); end
  def self.parse(content = nil); end
end
class Keepachangelog::YamlParser < Keepachangelog::Parser
  def add_change(yaml, version); end
  def generate_line(yaml); end
  def initialize_version(version); end
  def load(path = nil); end
  def parse(content, version); end
  def parse_file(filename, version); end
  def parse_version(folder); end
  def read_meta(path); end
  def self.load(path = nil); end
  def self.parse(content, version = nil); end
  def version_date(version); end
end
class Keepachangelog::Printer
end
class Keepachangelog::MarkdownPrinter < Keepachangelog::Printer
  def anchor(v, i); end
  def anchors; end
  def change(content); end
  def clean_intro(text); end
  def compare_sections(a, b); end
  def compare_versions(a, b); end
  def default_intro; end
  def default_title; end
  def first_commit; end
  def initialize(versions, options = nil); end
  def options; end
  def options=(arg0); end
  def parse_versions(versions); end
  def section(header, content); end
  def to_s; end
  def version(header, content); end
  def version_header(version, date); end
  def versions; end
  def versions=(arg0); end
end
class Keepachangelog::YamlPrinter < Keepachangelog::Printer
  def changelog; end
  def changelog=(arg0); end
  def create_unique_file(folder, filename); end
  def extract_field!(line, pattern, name); end
  def initialize(changelog); end
  def parse_line(line); end
  def write(path); end
  def write_change(folder, change); end
  def write_changes(path, changes); end
  def write_meta(path); end
  def write_versions(path, versions); end
end
